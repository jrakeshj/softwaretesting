package Encapsulation;

public class Student {
	private int id;
	private String name;
	private String studentClass;
	
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getStudentClass() {
		return studentClass;
	}
	public void setStudentClass(String studentClass) {
		this.studentClass = studentClass;
	}
	
	public String toString() {
	    return "Student[ID: " + id + ", Name: " + name + ", Class: " + studentClass + "]";
	}

}

public class Teacher {
	
	private int id;
	private String name;
	private String subject;
	private int salary;
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getsubject() {
		return subject;
	}
	public void setSubject(String subject) {
		this.subject = subject;
	}
	public int getSalary() {
		return salary;
	}
	public void setSalary(int salary) {
		this.salary = salary;
	}
	
	public String toString() {
        return "Teacher[ID: " + id + ", Name: " + name + ", Subject: " + subject + ", Salary: " + salary + "]";
    }

}
package Encapsulation;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class FileHandler {
    private static final String PASSWORD_FILE = "/Users/rakeshj/Documents/PROJECT/ENCAPSULATIO.txt.txt";

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        if (!validatePassword(scanner)) {
            System.out.println("Invalid password. Exiting...");
            return;
        }

        List<Teacher> teachers = new ArrayList<>();
        List<Student> students = new ArrayList<>();

        inputData(scanner, teachers, students);

        System.out.println("\nTeachers:");
        for (Teacher teacher : teachers) {
            System.out.println(teacher);
        }

        System.out.println("\nStudents:");
        for (Student student : students) {
            System.out.println(student);
        }
    }

    private static void inputData(Scanner scanner, List<Teacher> teachers, List<Student> students) {
        System.out.print("Enter number of teachers: ");
        int teacherCount = scanner.nextInt();
        scanner.nextLine();
        for (int i = 0; i < teacherCount; i++) {
            Teacher teacher = new Teacher();
            System.out.println("Enter Teacher " + (i + 1) + " details:");
            System.out.print("ID: "); 
            teacher.setId(scanner.nextInt());
            scanner.nextLine();
            System.out.print("Name: "); 
            teacher.setName(scanner.nextLine());
            System.out.print("Subject: ");
            teacher.setSubject(scanner.nextLine());
           
            teachers.add(teacher);
        }

        System.out.print("Enter number of students: ");
        int studentCount = scanner.nextInt();
        scanner.nextLine();
        for (int i = 0; i < studentCount; i++) {
            Student student = new Student();
            System.out.println("Enter Student " + (i + 1) + " details:");
            System.out.print("ID: ");
            student.setId(scanner.nextInt());
            scanner.nextLine();
            System.out.print("Name: "); 
            student.setName(scanner.nextLine());
            System.out.print("Class: "); 
            student.setStudentClass(scanner.nextLine());
            students.add(student);
        }
    }

    private static boolean validatePassword(Scanner scanner) {
        File file = new File(PASSWORD_FILE);
        if (!file.exists()) {
            System.out.print("Set a password: ");
            try {
                FileWriter writer = new FileWriter(file);
                writer.write(scanner.nextLine());
                writer.close();
                System.out.println("Password saved. Please restart the program.");
                return false;
            } catch (IOException e) {
                return false;
            }
        }

        System.out.print("Enter password: ");
        try {
            BufferedReader reader = new BufferedReader(new FileReader(file));
            String savedPassword = reader.readLine();
            reader.close();
            return scanner.nextLine().equals(savedPassword);
        } catch (IOException e) {
            return false;
        }
    }
}
